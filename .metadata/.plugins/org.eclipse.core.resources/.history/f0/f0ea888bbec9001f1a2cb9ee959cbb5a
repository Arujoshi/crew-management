package com.crew.model;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.List;

import jakarta.persistence.CollectionTable;
import jakarta.persistence.JoinColumn;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.Size;
import jakarta.persistence.Column;
import jakarta.persistence.ElementCollection;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

@Entity
@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
public class CrewMember {

	@Id
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	private Long crewId;
	
	@Column(name="FullName")
	@NotBlank(message = "Crew name is required")
    @Size(max = 100, message = "Crew name must not exceed 100 characters")
	private String crewName;
	
	@Column(name="DateOfBirth")
	private LocalDate dateOfBirth;
	
	@Column(name="Gender")
	private String gender;
	
	@Column(name="Position")
	private String position;
	
	@Column(name="Department")
	private String department;
	
	@Column(name="MobileNo")
	private String contactNo;
	
	@Column(name="EmailId")
	private String emailId;
	
	@Column(name="Address")
	private String address;
	
	@Column(name="JoiningDate")
	private LocalDate dateOfJoining;
	
	@Column(name="EmployementStatus")
	private String employementStatus;
	
	@ElementCollection
    @CollectionTable(name = "EmergencyContacts", joinColumns = @JoinColumn(name = "CrewId"))
	@Column(name="EmergencyContacts")
	private List<EmergencyContact> emergencyContacts;
	
	@ElementCollection
    @CollectionTable(name = "LanguageSpoken", joinColumns = @JoinColumn(name = "CrewId"))
	@Column(name="LanguageSpoken")
	private List<String> languageSpoken;
	
	@ElementCollection
    @CollectionTable(name = "Qualifications", joinColumns = @JoinColumn(name = "CrewId"))
	@Column(name="Qualifications")
	private List<String> qualifications;
	
	@Column(name = "LastFlightEndTime")
    private LocalDateTime lastFlightEndTime;

    @Column(name = "TotalHoursWorked", nullable = false)
    private int totalHoursWorked = 0;
    
    @Column(name = "LastWorkedDate")
    private LocalDate lastWorkedDate;

    @Column(name = "AvailabilityStatus", nullable = false)
    private String availabilityStatus; // e.g., Available, On Duty, Resting, Sick

    @Column(name = "IsMedicallyCleared", nullable = false)
    private boolean isMedicallyCleared;

    @Column(name = "LastMedicalCheckup")
    private LocalDate lastMedicalCheckup;
	
}
