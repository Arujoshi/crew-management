package com.crew.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.crew.feign.AuthorisationClient;
import com.crew.model.CrewMember;
import com.crew.service.CrewMemberServiceImpl;

import jakarta.validation.Valid;

@RestController
@RequestMapping("/api/crew")
public class CrewMemberController {

	@Autowired
	private CrewMemberServiceImpl crewService;
	
	@Autowired
	private AuthorisationClient authorisationClient;

	@GetMapping
	public List<CrewMember> getAllCrewMembers() {
		return crewService.getAllCrewMembers();
	}

	@GetMapping("/{id}")
	public ResponseEntity<CrewMember> getCrewMemberById(@RequestHeader(name = "Authorization")String token, @PathVariable("id") Long id) {
		if (authorisationClient.validate(token)) {
		CrewMember crewMember = crewService.getCrewMemberById(id);
		if (crewMember != null) {
			return ResponseEntity.ok(crewMember);
		} else {
			return ResponseEntity.notFound().build();
		}
	}

	@PostMapping
	public CrewMember addCrewMember(@Valid @RequestBody CrewMember crewMember) {
		return crewService.addCrewMember(crewMember);
	}

	@DeleteMapping("/{id}")
	public CrewMember deleteCrewMember(@PathVariable("id") Long id) {
		return crewService.deleteCrewMember(id);
	}

	@PutMapping("/{id}")
	public ResponseEntity<CrewMember> updateCrew(@PathVariable("id") Long id,@Valid @RequestBody CrewMember updatedCrewMember) {
		CrewMember updatedCrew = crewService.updateCrewMember(id, updatedCrewMember);
		return ResponseEntity.ok(updatedCrew);
	}

}
